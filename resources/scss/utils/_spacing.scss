/* stylelint-disable declaration-no-important */

// =============================================================================
// :: Spacing
// =============================================================================
/**
 * These utils are used to give a specific spacing (padding or margin) to an
 * element. This file should be filled up along the project. The classes are
 * multiples of a certain number and are to be avoided when used within
 * components.
 */

// =============================================================================
// :: Settings
// =============================================================================
$step: 10px;
$amount: 5;
$largeContainer: px($container-width-base)+px(10rem)+(get-viewport-spacing("screen") * 2);

// =============================================================================
// :: Padding - none
// =============================================================================
// .u-padding-top-none {
// 	padding-top: 0 !important;
// }

// .u-padding-right-none {
// 	padding-right: 0 !important;
// }

// .u-padding-bottom-none {
// 	padding-bottom: 0 !important;
// }

// .u-padding-left-none {
// 	padding-left: 0 !important;
// }

// =============================================================================
// :: Padding - top
// =============================================================================
// @for $i from 1 through $amount {

// 	.u-padding-top-#{$i}x {
// 		padding-top: $i * $step !important;
// 	}
// }

// =============================================================================
// :: Padding outside - right
// =============================================================================
// @for $i from 1 through $amount {

// 	.u-padding-right-#{$i}x {
// 		padding-right: $i * $step !important;
// 	}
// }

// .u-outside-padding-right {
// 	margin-right: - get-viewport-spacing("mobile") !important;
// 	padding-right: get-viewport-spacing("mobile") !important;

// 	@include respond-at(get-breakpoint("tablet")) {
// 		margin-right: - get-viewport-spacing("tablet") !important;
// 		padding-right: get-viewport-spacing("tablet") !important;
// 	}

// 	@include respond-at(get-breakpoint("desktop")) {
// 		margin-right: - get-viewport-spacing("desktop") !important;
// 		padding-right: get-viewport-spacing("desktop") !important;
// 	}

// 	@include respond-at(get-breakpoint("screen")) {
// 		margin-right: - get-viewport-spacing("screen") !important;
// 		padding-right: get-viewport-spacing("screen") !important;
// 	}

// 	@include respond-at($largeContainer) {
// 		margin-right: - 10rem !important;
// 		padding-right: 10rem !important;
// 	}
// }

// =============================================================================
// :: Padding - bottom
// =============================================================================
// @for $i from 1 through $amount {

// 	.u-padding-bottom-#{$i}x {
// 		padding-bottom: $i * $step !important;
// 	}
// }

// =============================================================================
// :: Padding - left
// =============================================================================
// @for $i from 1 through $amount {

// 	.u-padding-left-#{$i}x {
// 		padding-left: $i * $step !important;
// 	}
// }

// =============================================================================
// :: Padding outside - left
// =============================================================================
// .u-outside-padding-left {
// 	margin-left: - get-viewport-spacing("mobile") !important;
// 	padding-left: get-viewport-spacing("mobile") !important;

// 	@include respond-at(get-breakpoint("tablet")) {
// 		margin-left: - get-viewport-spacing("tablet") !important;
// 		padding-left: get-viewport-spacing("tablet") !important;
// 	}

// 	@include respond-at(get-breakpoint("desktop")) {
// 		margin-left: - get-viewport-spacing("desktop") !important;
// 		padding-left: get-viewport-spacing("desktop") !important;
// 	}

// 	@include respond-at(get-breakpoint("screen")) {
// 		margin-left: - get-viewport-spacing("screen") !important;
// 		padding-left: get-viewport-spacing("screen") !important;
// 	}

// 	@include respond-at($largeContainer) {
// 		margin-left: - 10rem !important;
// 		padding-left: 10rem !important;
// 	}
// }

// =============================================================================
// :: Margin - none
// =============================================================================
// .u-margin-top-none {
// 	margin-top: 0 !important;
// }

// .u-margin-right-none {
// 	margin-right: 0 !important;
// }

// .u-margin-bottom-none {
// 	margin-bottom: 0 !important;
// }

// .u-margin-left-none {
// 	margin-left: 0 !important;
// }

// =============================================================================
// :: Margin - top
// =============================================================================
// @for $i from 1 through $amount {

// 	.u-margin-top-#{$i}x {
// 		margin-top: $i * $step !important;
// 	}
// }

// @each $breakpoint, $params in $breakpoints {
// 	$width: map-get($params, width);

// 	@for $i from 1 through $amount {

// 		.u-margin-top-#{$i}x\@above-#{$breakpoint} {

// 			@include respond-at($width) {
// 				margin-top: $i * $step !important;
// 			}
// 		}
// 	}

// 	@for $i from 1 through $amount {

// 		.u-margin-top-#{$i}x\@below-#{$breakpoint} {

// 			@include respond-to($width) {
// 				margin-top: $i * $step !important;
// 			}
// 		}
// 	}
// }

// =============================================================================
// :: Margin - right
// =============================================================================
// @for $i from 1 through $amount {

// 	.u-margin-right-#{$i}x {
// 		margin-right: $i * $step !important;
// 	}
// }

// =============================================================================
// :: Margin - bottom
// =============================================================================
// @for $i from 1 through $amount {

// 	.u-margin-bottom-#{$i}x {
// 		margin-bottom: $i * $step !important;
// 	}
// }

// @each $breakpoint, $params in $breakpoints {
// 	$width: map-get($params, width);

// 	@for $i from 1 through $amount {

// 		.u-margin-bottom-#{$i}x\@above-#{$breakpoint} {

// 			@include respond-at($width) {
// 				margin-bottom: $i * $step !important;
// 			}
// 		}
// 	}

// 	@for $i from 1 through $amount {

// 		.u-margin-bottom-#{$i}x\@below-#{$breakpoint} {

// 			@include respond-to($width) {
// 				margin-bottom: $i * $step !important;
// 			}
// 		}
// 	}
// }

// =============================================================================
// :: Margin - left
// =============================================================================
// @for $i from 1 through $amount {

// 	.u-margin-left-#{$i}x {
// 		margin-left: $i * $step !important;
// 	}
// }
